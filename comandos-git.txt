1 git clone https://github.com/Fulgus/umafactorial.git //Clonacion repositorio a la máquina.
2 cd umafactorial //Cambio a repositorio de trabajo.
3 git config user.name Fulgus //Definición de usuario
4 git config user.email //Definición de correo
5 notepad factorial.java  //Edición del fichero Factorial.java en Notepad. Añadimos código
6 git add factorial.java //Añadimos el fichero al repositorio para su próximo commit y pull. 				    Siempre habrá un add previo a un commit.
7 git commit -m "implementacion inicial"  //Primer commit de implementación inicial.
8 notepad factorial.java //Segunda edición del fichero.
9 git add factorial.java
10 git commit -m "refactorizacion" //Commit de refactorización
11 git push origin master //Subida al repositorio de GitHub en la nube.
12 git checkout -b recursivo  //Creación y cambio a nueva rama del repositorio “Recursivo”
13 notepad factorial.java //Edición
14 git add factorial.java
15 git commit -m "implementacion recursiva"
16 git push origin recursivo //Subida a la nube del branch recursivo.
17 git checkout master //Cambio a la rama Master.
18 notepad factorial.java
19 git add factorial.java
20 git commit -m "correccion numeros negativos"
21 git push origin master
22 git checkout recursivo
23  notepad factorial.java
24 git commit -m "optimizacion"
25 git push origin recursivo
26 git checkout master
27 git merge recursivo //Fusión de ficheros de ramas Master y Recursivo.
28 git checkout -b refacIO //Creamos rama refacIO para la refactorización de entrada y salida.
29 notepad factorial.java
30 git add factorial.java
31 git commit -m "refactorizacion de metodo de entrada"
32 git push origin refacIO //Subimos a la nube el trabajo realizado en la rama refacIO
33 notepad factorial.java
34 git stash //Guardado temporal del trabajo
35 git checkout master
36 notepad factorial.java
37 git add factorial.java
38 git commit -m "cambio de long a BitInteger"
39 git push origin master
40 git checkout refacIO
41 git stash pop //Recuperamos los cambios guardados en el stash.
42 git add factorial.java
43 git commit -m "refactorizacion de metodo de salida"
44 git checkout master
45 git merge refacIO //Fusión entre ramas Master y RefacIO. Crea conflictos
46 gitk –all //Comprobación del estado de las ramas.
47 git push origin master //Subida del trabajo hasta el momento.
48 notepad factorial.java  //Solución del merge. Creaba conflictos.
49 git add factorial.java
50 git commit -m "mezcla de rama refacIO"
51 git push origin master //Subida final de la práctica
